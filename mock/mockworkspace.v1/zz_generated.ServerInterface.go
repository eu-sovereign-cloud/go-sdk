// Code generated by mockery v2.52.2. DO NOT EDIT.

package mockworkspace

import (
	http "net/http"

	workspace "github.com/eu-sovereign-cloud/go-sdk/pkg/workspace.v1"
	mock "github.com/stretchr/testify/mock"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// CreateOrUpdateWorkspace provides a mock function with given fields: w, r, id, name, params
func (_m *MockServerInterface) CreateOrUpdateWorkspace(w http.ResponseWriter, r *http.Request, id string, name string, params workspace.CreateOrUpdateWorkspaceParams) {
	_m.Called(w, r, id, name, params)
}

// MockServerInterface_CreateOrUpdateWorkspace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateWorkspace'
type MockServerInterface_CreateOrUpdateWorkspace_Call struct {
	*mock.Call
}

// CreateOrUpdateWorkspace is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - id string
//   - name string
//   - params workspace.CreateOrUpdateWorkspaceParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateWorkspace(w interface{}, r interface{}, id interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateWorkspace_Call {
	return &MockServerInterface_CreateOrUpdateWorkspace_Call{Call: _e.mock.On("CreateOrUpdateWorkspace", w, r, id, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateWorkspace_Call) Run(run func(w http.ResponseWriter, r *http.Request, id string, name string, params workspace.CreateOrUpdateWorkspaceParams)) *MockServerInterface_CreateOrUpdateWorkspace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string), args[3].(string), args[4].(workspace.CreateOrUpdateWorkspaceParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateWorkspace_Call) Return() *MockServerInterface_CreateOrUpdateWorkspace_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateWorkspace_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string, string, workspace.CreateOrUpdateWorkspaceParams)) *MockServerInterface_CreateOrUpdateWorkspace_Call {
	_c.Run(run)
	return _c
}

// DeleteWorkspace provides a mock function with given fields: w, r, id, name, params
func (_m *MockServerInterface) DeleteWorkspace(w http.ResponseWriter, r *http.Request, id string, name string, params workspace.DeleteWorkspaceParams) {
	_m.Called(w, r, id, name, params)
}

// MockServerInterface_DeleteWorkspace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteWorkspace'
type MockServerInterface_DeleteWorkspace_Call struct {
	*mock.Call
}

// DeleteWorkspace is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - id string
//   - name string
//   - params workspace.DeleteWorkspaceParams
func (_e *MockServerInterface_Expecter) DeleteWorkspace(w interface{}, r interface{}, id interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteWorkspace_Call {
	return &MockServerInterface_DeleteWorkspace_Call{Call: _e.mock.On("DeleteWorkspace", w, r, id, name, params)}
}

func (_c *MockServerInterface_DeleteWorkspace_Call) Run(run func(w http.ResponseWriter, r *http.Request, id string, name string, params workspace.DeleteWorkspaceParams)) *MockServerInterface_DeleteWorkspace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string), args[3].(string), args[4].(workspace.DeleteWorkspaceParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteWorkspace_Call) Return() *MockServerInterface_DeleteWorkspace_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteWorkspace_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string, string, workspace.DeleteWorkspaceParams)) *MockServerInterface_DeleteWorkspace_Call {
	_c.Run(run)
	return _c
}

// GetWorkspace provides a mock function with given fields: w, r, id, name
func (_m *MockServerInterface) GetWorkspace(w http.ResponseWriter, r *http.Request, id string, name string) {
	_m.Called(w, r, id, name)
}

// MockServerInterface_GetWorkspace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWorkspace'
type MockServerInterface_GetWorkspace_Call struct {
	*mock.Call
}

// GetWorkspace is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - id string
//   - name string
func (_e *MockServerInterface_Expecter) GetWorkspace(w interface{}, r interface{}, id interface{}, name interface{}) *MockServerInterface_GetWorkspace_Call {
	return &MockServerInterface_GetWorkspace_Call{Call: _e.mock.On("GetWorkspace", w, r, id, name)}
}

func (_c *MockServerInterface_GetWorkspace_Call) Run(run func(w http.ResponseWriter, r *http.Request, id string, name string)) *MockServerInterface_GetWorkspace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *MockServerInterface_GetWorkspace_Call) Return() *MockServerInterface_GetWorkspace_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetWorkspace_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string, string)) *MockServerInterface_GetWorkspace_Call {
	_c.Run(run)
	return _c
}

// ListWorkspaces provides a mock function with given fields: w, r, id, params
func (_m *MockServerInterface) ListWorkspaces(w http.ResponseWriter, r *http.Request, id string, params workspace.ListWorkspacesParams) {
	_m.Called(w, r, id, params)
}

// MockServerInterface_ListWorkspaces_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListWorkspaces'
type MockServerInterface_ListWorkspaces_Call struct {
	*mock.Call
}

// ListWorkspaces is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - id string
//   - params workspace.ListWorkspacesParams
func (_e *MockServerInterface_Expecter) ListWorkspaces(w interface{}, r interface{}, id interface{}, params interface{}) *MockServerInterface_ListWorkspaces_Call {
	return &MockServerInterface_ListWorkspaces_Call{Call: _e.mock.On("ListWorkspaces", w, r, id, params)}
}

func (_c *MockServerInterface_ListWorkspaces_Call) Run(run func(w http.ResponseWriter, r *http.Request, id string, params workspace.ListWorkspacesParams)) *MockServerInterface_ListWorkspaces_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string), args[3].(workspace.ListWorkspacesParams))
	})
	return _c
}

func (_c *MockServerInterface_ListWorkspaces_Call) Return() *MockServerInterface_ListWorkspaces_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListWorkspaces_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string, workspace.ListWorkspacesParams)) *MockServerInterface_ListWorkspaces_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
