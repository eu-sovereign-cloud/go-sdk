// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocknatgateway

import (
	http "net/http"

	natgateway "github.com/eu-sovereign-cloud/go-sdk/pkg/spec/extensions.natgateway.v1beta1"
	mock "github.com/stretchr/testify/mock"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// CreateOrUpdateInternetNatGatewayInstance provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateInternetNatGatewayInstance(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName, params natgateway.CreateOrUpdateInternetNatGatewayInstanceParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateInternetNatGatewayInstance'
type MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call struct {
	*mock.Call
}

// CreateOrUpdateInternetNatGatewayInstance is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant natgateway.Tenant
//   - workspace natgateway.Workspace
//   - name natgateway.ResourceName
//   - params natgateway.CreateOrUpdateInternetNatGatewayInstanceParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateInternetNatGatewayInstance(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call {
	return &MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call{Call: _e.mock.On("CreateOrUpdateInternetNatGatewayInstance", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName, params natgateway.CreateOrUpdateInternetNatGatewayInstanceParams)) *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(natgateway.Tenant), args[3].(natgateway.Workspace), args[4].(natgateway.ResourceName), args[5].(natgateway.CreateOrUpdateInternetNatGatewayInstanceParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call) Return() *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, natgateway.Tenant, natgateway.Workspace, natgateway.ResourceName, natgateway.CreateOrUpdateInternetNatGatewayInstanceParams)) *MockServerInterface_CreateOrUpdateInternetNatGatewayInstance_Call {
	_c.Run(run)
	return _c
}

// DeleteInternetNatGatewayInstance provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteInternetNatGatewayInstance(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName, params natgateway.DeleteInternetNatGatewayInstanceParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteInternetNatGatewayInstance_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteInternetNatGatewayInstance'
type MockServerInterface_DeleteInternetNatGatewayInstance_Call struct {
	*mock.Call
}

// DeleteInternetNatGatewayInstance is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant natgateway.Tenant
//   - workspace natgateway.Workspace
//   - name natgateway.ResourceName
//   - params natgateway.DeleteInternetNatGatewayInstanceParams
func (_e *MockServerInterface_Expecter) DeleteInternetNatGatewayInstance(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteInternetNatGatewayInstance_Call {
	return &MockServerInterface_DeleteInternetNatGatewayInstance_Call{Call: _e.mock.On("DeleteInternetNatGatewayInstance", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteInternetNatGatewayInstance_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName, params natgateway.DeleteInternetNatGatewayInstanceParams)) *MockServerInterface_DeleteInternetNatGatewayInstance_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(natgateway.Tenant), args[3].(natgateway.Workspace), args[4].(natgateway.ResourceName), args[5].(natgateway.DeleteInternetNatGatewayInstanceParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteInternetNatGatewayInstance_Call) Return() *MockServerInterface_DeleteInternetNatGatewayInstance_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteInternetNatGatewayInstance_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, natgateway.Tenant, natgateway.Workspace, natgateway.ResourceName, natgateway.DeleteInternetNatGatewayInstanceParams)) *MockServerInterface_DeleteInternetNatGatewayInstance_Call {
	_c.Run(run)
	return _c
}

// GetInternetNatGatewayInstance provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetInternetNatGatewayInstance(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetInternetNatGatewayInstance_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetInternetNatGatewayInstance'
type MockServerInterface_GetInternetNatGatewayInstance_Call struct {
	*mock.Call
}

// GetInternetNatGatewayInstance is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant natgateway.Tenant
//   - workspace natgateway.Workspace
//   - name natgateway.ResourceName
func (_e *MockServerInterface_Expecter) GetInternetNatGatewayInstance(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetInternetNatGatewayInstance_Call {
	return &MockServerInterface_GetInternetNatGatewayInstance_Call{Call: _e.mock.On("GetInternetNatGatewayInstance", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetInternetNatGatewayInstance_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, name natgateway.ResourceName)) *MockServerInterface_GetInternetNatGatewayInstance_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(natgateway.Tenant), args[3].(natgateway.Workspace), args[4].(natgateway.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetInternetNatGatewayInstance_Call) Return() *MockServerInterface_GetInternetNatGatewayInstance_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetInternetNatGatewayInstance_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, natgateway.Tenant, natgateway.Workspace, natgateway.ResourceName)) *MockServerInterface_GetInternetNatGatewayInstance_Call {
	_c.Run(run)
	return _c
}

// ListInternetNatGatewayInstances provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListInternetNatGatewayInstances(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, params natgateway.ListInternetNatGatewayInstancesParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListInternetNatGatewayInstances_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListInternetNatGatewayInstances'
type MockServerInterface_ListInternetNatGatewayInstances_Call struct {
	*mock.Call
}

// ListInternetNatGatewayInstances is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant natgateway.Tenant
//   - workspace natgateway.Workspace
//   - params natgateway.ListInternetNatGatewayInstancesParams
func (_e *MockServerInterface_Expecter) ListInternetNatGatewayInstances(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListInternetNatGatewayInstances_Call {
	return &MockServerInterface_ListInternetNatGatewayInstances_Call{Call: _e.mock.On("ListInternetNatGatewayInstances", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListInternetNatGatewayInstances_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant natgateway.Tenant, workspace natgateway.Workspace, params natgateway.ListInternetNatGatewayInstancesParams)) *MockServerInterface_ListInternetNatGatewayInstances_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(natgateway.Tenant), args[3].(natgateway.Workspace), args[4].(natgateway.ListInternetNatGatewayInstancesParams))
	})
	return _c
}

func (_c *MockServerInterface_ListInternetNatGatewayInstances_Call) Return() *MockServerInterface_ListInternetNatGatewayInstances_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListInternetNatGatewayInstances_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, natgateway.Tenant, natgateway.Workspace, natgateway.ListInternetNatGatewayInstancesParams)) *MockServerInterface_ListInternetNatGatewayInstances_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
