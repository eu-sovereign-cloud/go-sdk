// Code generated by mockery v2.52.2. DO NOT EDIT.

package mockloadbalancer

import (
	http "net/http"

	loadbalancer "github.com/eu-sovereign-cloud/go-sdk/pkg/spec/extensions.loadbalancer.v1beta1"
	mock "github.com/stretchr/testify/mock"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// CreateOrUpdateNetworkLoadBalancer provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateNetworkLoadBalancer(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName, params loadbalancer.CreateOrUpdateNetworkLoadBalancerParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateNetworkLoadBalancer'
type MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call struct {
	*mock.Call
}

// CreateOrUpdateNetworkLoadBalancer is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant loadbalancer.Tenant
//   - workspace loadbalancer.Workspace
//   - name loadbalancer.ResourceName
//   - params loadbalancer.CreateOrUpdateNetworkLoadBalancerParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateNetworkLoadBalancer(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call {
	return &MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call{Call: _e.mock.On("CreateOrUpdateNetworkLoadBalancer", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName, params loadbalancer.CreateOrUpdateNetworkLoadBalancerParams)) *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(loadbalancer.Tenant), args[3].(loadbalancer.Workspace), args[4].(loadbalancer.ResourceName), args[5].(loadbalancer.CreateOrUpdateNetworkLoadBalancerParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call) Return() *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, loadbalancer.Tenant, loadbalancer.Workspace, loadbalancer.ResourceName, loadbalancer.CreateOrUpdateNetworkLoadBalancerParams)) *MockServerInterface_CreateOrUpdateNetworkLoadBalancer_Call {
	_c.Run(run)
	return _c
}

// DeleteNetworkLoadBalancer provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteNetworkLoadBalancer(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName, params loadbalancer.DeleteNetworkLoadBalancerParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteNetworkLoadBalancer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteNetworkLoadBalancer'
type MockServerInterface_DeleteNetworkLoadBalancer_Call struct {
	*mock.Call
}

// DeleteNetworkLoadBalancer is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant loadbalancer.Tenant
//   - workspace loadbalancer.Workspace
//   - name loadbalancer.ResourceName
//   - params loadbalancer.DeleteNetworkLoadBalancerParams
func (_e *MockServerInterface_Expecter) DeleteNetworkLoadBalancer(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteNetworkLoadBalancer_Call {
	return &MockServerInterface_DeleteNetworkLoadBalancer_Call{Call: _e.mock.On("DeleteNetworkLoadBalancer", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteNetworkLoadBalancer_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName, params loadbalancer.DeleteNetworkLoadBalancerParams)) *MockServerInterface_DeleteNetworkLoadBalancer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(loadbalancer.Tenant), args[3].(loadbalancer.Workspace), args[4].(loadbalancer.ResourceName), args[5].(loadbalancer.DeleteNetworkLoadBalancerParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteNetworkLoadBalancer_Call) Return() *MockServerInterface_DeleteNetworkLoadBalancer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteNetworkLoadBalancer_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, loadbalancer.Tenant, loadbalancer.Workspace, loadbalancer.ResourceName, loadbalancer.DeleteNetworkLoadBalancerParams)) *MockServerInterface_DeleteNetworkLoadBalancer_Call {
	_c.Run(run)
	return _c
}

// GetNetworkLoadBalancer provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetNetworkLoadBalancer(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetNetworkLoadBalancer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNetworkLoadBalancer'
type MockServerInterface_GetNetworkLoadBalancer_Call struct {
	*mock.Call
}

// GetNetworkLoadBalancer is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant loadbalancer.Tenant
//   - workspace loadbalancer.Workspace
//   - name loadbalancer.ResourceName
func (_e *MockServerInterface_Expecter) GetNetworkLoadBalancer(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetNetworkLoadBalancer_Call {
	return &MockServerInterface_GetNetworkLoadBalancer_Call{Call: _e.mock.On("GetNetworkLoadBalancer", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetNetworkLoadBalancer_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, name loadbalancer.ResourceName)) *MockServerInterface_GetNetworkLoadBalancer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(loadbalancer.Tenant), args[3].(loadbalancer.Workspace), args[4].(loadbalancer.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetNetworkLoadBalancer_Call) Return() *MockServerInterface_GetNetworkLoadBalancer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetNetworkLoadBalancer_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, loadbalancer.Tenant, loadbalancer.Workspace, loadbalancer.ResourceName)) *MockServerInterface_GetNetworkLoadBalancer_Call {
	_c.Run(run)
	return _c
}

// ListNetworkLoadBalancers provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListNetworkLoadBalancers(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, params loadbalancer.ListNetworkLoadBalancersParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListNetworkLoadBalancers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListNetworkLoadBalancers'
type MockServerInterface_ListNetworkLoadBalancers_Call struct {
	*mock.Call
}

// ListNetworkLoadBalancers is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant loadbalancer.Tenant
//   - workspace loadbalancer.Workspace
//   - params loadbalancer.ListNetworkLoadBalancersParams
func (_e *MockServerInterface_Expecter) ListNetworkLoadBalancers(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListNetworkLoadBalancers_Call {
	return &MockServerInterface_ListNetworkLoadBalancers_Call{Call: _e.mock.On("ListNetworkLoadBalancers", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListNetworkLoadBalancers_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant loadbalancer.Tenant, workspace loadbalancer.Workspace, params loadbalancer.ListNetworkLoadBalancersParams)) *MockServerInterface_ListNetworkLoadBalancers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(loadbalancer.Tenant), args[3].(loadbalancer.Workspace), args[4].(loadbalancer.ListNetworkLoadBalancersParams))
	})
	return _c
}

func (_c *MockServerInterface_ListNetworkLoadBalancers_Call) Return() *MockServerInterface_ListNetworkLoadBalancers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListNetworkLoadBalancers_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, loadbalancer.Tenant, loadbalancer.Workspace, loadbalancer.ListNetworkLoadBalancersParams)) *MockServerInterface_ListNetworkLoadBalancers_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
