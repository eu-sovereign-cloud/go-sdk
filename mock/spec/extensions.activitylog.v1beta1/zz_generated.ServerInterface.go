// Code generated by mockery v2.52.2. DO NOT EDIT.

package mockactivitylog

import (
	http "net/http"

	activitylog "github.com/eu-sovereign-cloud/go-sdk/pkg/spec/extensions.activitylog.v1beta1"

	mock "github.com/stretchr/testify/mock"

	schema "github.com/eu-sovereign-cloud/go-sdk/pkg/spec/schema"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// ListActivityLogs provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListActivityLogs(w http.ResponseWriter, r *http.Request, tenant schema.TenantPathParam, workspace schema.WorkspacePathParam, params activitylog.ListActivityLogsParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListActivityLogs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListActivityLogs'
type MockServerInterface_ListActivityLogs_Call struct {
	*mock.Call
}

// ListActivityLogs is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant schema.TenantPathParam
//   - workspace schema.WorkspacePathParam
//   - params activitylog.ListActivityLogsParams
func (_e *MockServerInterface_Expecter) ListActivityLogs(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListActivityLogs_Call {
	return &MockServerInterface_ListActivityLogs_Call{Call: _e.mock.On("ListActivityLogs", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListActivityLogs_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant schema.TenantPathParam, workspace schema.WorkspacePathParam, params activitylog.ListActivityLogsParams)) *MockServerInterface_ListActivityLogs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(schema.TenantPathParam), args[3].(schema.WorkspacePathParam), args[4].(activitylog.ListActivityLogsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListActivityLogs_Call) Return() *MockServerInterface_ListActivityLogs_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListActivityLogs_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, schema.TenantPathParam, schema.WorkspacePathParam, activitylog.ListActivityLogsParams)) *MockServerInterface_ListActivityLogs_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
