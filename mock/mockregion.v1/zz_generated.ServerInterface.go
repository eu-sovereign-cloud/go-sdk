// Code generated by mockery v2.51.1. DO NOT EDIT.

package mockregion

import (
	http "net/http"

	region "github.com/eu-sovereign-cloud/go-sdk/pkg/region.v1"
	mock "github.com/stretchr/testify/mock"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// GetRegion provides a mock function with given fields: w, r, name
func (_m *MockServerInterface) GetRegion(w http.ResponseWriter, r *http.Request, name string) {
	_m.Called(w, r, name)
}

// MockServerInterface_GetRegion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRegion'
type MockServerInterface_GetRegion_Call struct {
	*mock.Call
}

// GetRegion is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - name string
func (_e *MockServerInterface_Expecter) GetRegion(w interface{}, r interface{}, name interface{}) *MockServerInterface_GetRegion_Call {
	return &MockServerInterface_GetRegion_Call{Call: _e.mock.On("GetRegion", w, r, name)}
}

func (_c *MockServerInterface_GetRegion_Call) Run(run func(w http.ResponseWriter, r *http.Request, name string)) *MockServerInterface_GetRegion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string))
	})
	return _c
}

func (_c *MockServerInterface_GetRegion_Call) Return() *MockServerInterface_GetRegion_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetRegion_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string)) *MockServerInterface_GetRegion_Call {
	_c.Run(run)
	return _c
}

// ListRegions provides a mock function with given fields: w, r, params
func (_m *MockServerInterface) ListRegions(w http.ResponseWriter, r *http.Request, params region.ListRegionsParams) {
	_m.Called(w, r, params)
}

// MockServerInterface_ListRegions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListRegions'
type MockServerInterface_ListRegions_Call struct {
	*mock.Call
}

// ListRegions is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - params region.ListRegionsParams
func (_e *MockServerInterface_Expecter) ListRegions(w interface{}, r interface{}, params interface{}) *MockServerInterface_ListRegions_Call {
	return &MockServerInterface_ListRegions_Call{Call: _e.mock.On("ListRegions", w, r, params)}
}

func (_c *MockServerInterface_ListRegions_Call) Run(run func(w http.ResponseWriter, r *http.Request, params region.ListRegionsParams)) *MockServerInterface_ListRegions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(region.ListRegionsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListRegions_Call) Return() *MockServerInterface_ListRegions_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListRegions_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, region.ListRegionsParams)) *MockServerInterface_ListRegions_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
