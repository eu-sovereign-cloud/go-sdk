// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocknetwork

import (
	http "net/http"

	network "github.com/eu-sovereign-cloud/go-sdk/pkg/foundation.network.v1"
	mock "github.com/stretchr/testify/mock"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// CreateOrUpdateInternetGateway provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateInternetGateway(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateInternetGatewayParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateInternetGateway_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateInternetGateway'
type MockServerInterface_CreateOrUpdateInternetGateway_Call struct {
	*mock.Call
}

// CreateOrUpdateInternetGateway is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateInternetGatewayParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateInternetGateway(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateInternetGateway_Call {
	return &MockServerInterface_CreateOrUpdateInternetGateway_Call{Call: _e.mock.On("CreateOrUpdateInternetGateway", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateInternetGateway_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateInternetGatewayParams)) *MockServerInterface_CreateOrUpdateInternetGateway_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateInternetGatewayParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateInternetGateway_Call) Return() *MockServerInterface_CreateOrUpdateInternetGateway_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateInternetGateway_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateInternetGatewayParams)) *MockServerInterface_CreateOrUpdateInternetGateway_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdateNetwork provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateNetwork(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateNetworkParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateNetwork_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateNetwork'
type MockServerInterface_CreateOrUpdateNetwork_Call struct {
	*mock.Call
}

// CreateOrUpdateNetwork is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateNetworkParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateNetwork(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateNetwork_Call {
	return &MockServerInterface_CreateOrUpdateNetwork_Call{Call: _e.mock.On("CreateOrUpdateNetwork", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateNetwork_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateNetworkParams)) *MockServerInterface_CreateOrUpdateNetwork_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateNetworkParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNetwork_Call) Return() *MockServerInterface_CreateOrUpdateNetwork_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNetwork_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateNetworkParams)) *MockServerInterface_CreateOrUpdateNetwork_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdateNic provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateNic(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateNicParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateNic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateNic'
type MockServerInterface_CreateOrUpdateNic_Call struct {
	*mock.Call
}

// CreateOrUpdateNic is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateNicParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateNic(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateNic_Call {
	return &MockServerInterface_CreateOrUpdateNic_Call{Call: _e.mock.On("CreateOrUpdateNic", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateNic_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateNicParams)) *MockServerInterface_CreateOrUpdateNic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateNicParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNic_Call) Return() *MockServerInterface_CreateOrUpdateNic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateNic_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateNicParams)) *MockServerInterface_CreateOrUpdateNic_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdatePublicIp provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdatePublicIp(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdatePublicIpParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdatePublicIp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdatePublicIp'
type MockServerInterface_CreateOrUpdatePublicIp_Call struct {
	*mock.Call
}

// CreateOrUpdatePublicIp is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdatePublicIpParams
func (_e *MockServerInterface_Expecter) CreateOrUpdatePublicIp(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdatePublicIp_Call {
	return &MockServerInterface_CreateOrUpdatePublicIp_Call{Call: _e.mock.On("CreateOrUpdatePublicIp", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdatePublicIp_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdatePublicIpParams)) *MockServerInterface_CreateOrUpdatePublicIp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdatePublicIpParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdatePublicIp_Call) Return() *MockServerInterface_CreateOrUpdatePublicIp_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdatePublicIp_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdatePublicIpParams)) *MockServerInterface_CreateOrUpdatePublicIp_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdateRouteTable provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateRouteTable(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateRouteTableParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateRouteTable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateRouteTable'
type MockServerInterface_CreateOrUpdateRouteTable_Call struct {
	*mock.Call
}

// CreateOrUpdateRouteTable is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateRouteTableParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateRouteTable(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateRouteTable_Call {
	return &MockServerInterface_CreateOrUpdateRouteTable_Call{Call: _e.mock.On("CreateOrUpdateRouteTable", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateRouteTable_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateRouteTableParams)) *MockServerInterface_CreateOrUpdateRouteTable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateRouteTableParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateRouteTable_Call) Return() *MockServerInterface_CreateOrUpdateRouteTable_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateRouteTable_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateRouteTableParams)) *MockServerInterface_CreateOrUpdateRouteTable_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdateSecurityGroup provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateSecurityGroup(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateSecurityGroupParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateSecurityGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateSecurityGroup'
type MockServerInterface_CreateOrUpdateSecurityGroup_Call struct {
	*mock.Call
}

// CreateOrUpdateSecurityGroup is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateSecurityGroupParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateSecurityGroup(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateSecurityGroup_Call {
	return &MockServerInterface_CreateOrUpdateSecurityGroup_Call{Call: _e.mock.On("CreateOrUpdateSecurityGroup", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateSecurityGroup_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateSecurityGroupParams)) *MockServerInterface_CreateOrUpdateSecurityGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateSecurityGroupParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateSecurityGroup_Call) Return() *MockServerInterface_CreateOrUpdateSecurityGroup_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateSecurityGroup_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateSecurityGroupParams)) *MockServerInterface_CreateOrUpdateSecurityGroup_Call {
	_c.Run(run)
	return _c
}

// CreateOrUpdateSubnet provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) CreateOrUpdateSubnet(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateSubnetParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_CreateOrUpdateSubnet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrUpdateSubnet'
type MockServerInterface_CreateOrUpdateSubnet_Call struct {
	*mock.Call
}

// CreateOrUpdateSubnet is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.CreateOrUpdateSubnetParams
func (_e *MockServerInterface_Expecter) CreateOrUpdateSubnet(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_CreateOrUpdateSubnet_Call {
	return &MockServerInterface_CreateOrUpdateSubnet_Call{Call: _e.mock.On("CreateOrUpdateSubnet", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_CreateOrUpdateSubnet_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.CreateOrUpdateSubnetParams)) *MockServerInterface_CreateOrUpdateSubnet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.CreateOrUpdateSubnetParams))
	})
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateSubnet_Call) Return() *MockServerInterface_CreateOrUpdateSubnet_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateOrUpdateSubnet_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.CreateOrUpdateSubnetParams)) *MockServerInterface_CreateOrUpdateSubnet_Call {
	_c.Run(run)
	return _c
}

// DeleteInternetGateway provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteInternetGateway(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteInternetGatewayParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteInternetGateway_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteInternetGateway'
type MockServerInterface_DeleteInternetGateway_Call struct {
	*mock.Call
}

// DeleteInternetGateway is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteInternetGatewayParams
func (_e *MockServerInterface_Expecter) DeleteInternetGateway(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteInternetGateway_Call {
	return &MockServerInterface_DeleteInternetGateway_Call{Call: _e.mock.On("DeleteInternetGateway", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteInternetGateway_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteInternetGatewayParams)) *MockServerInterface_DeleteInternetGateway_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteInternetGatewayParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteInternetGateway_Call) Return() *MockServerInterface_DeleteInternetGateway_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteInternetGateway_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteInternetGatewayParams)) *MockServerInterface_DeleteInternetGateway_Call {
	_c.Run(run)
	return _c
}

// DeleteNetwork provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteNetwork(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteNetworkParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteNetwork_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteNetwork'
type MockServerInterface_DeleteNetwork_Call struct {
	*mock.Call
}

// DeleteNetwork is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteNetworkParams
func (_e *MockServerInterface_Expecter) DeleteNetwork(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteNetwork_Call {
	return &MockServerInterface_DeleteNetwork_Call{Call: _e.mock.On("DeleteNetwork", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteNetwork_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteNetworkParams)) *MockServerInterface_DeleteNetwork_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteNetworkParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteNetwork_Call) Return() *MockServerInterface_DeleteNetwork_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteNetwork_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteNetworkParams)) *MockServerInterface_DeleteNetwork_Call {
	_c.Run(run)
	return _c
}

// DeleteNic provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteNic(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteNicParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteNic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteNic'
type MockServerInterface_DeleteNic_Call struct {
	*mock.Call
}

// DeleteNic is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteNicParams
func (_e *MockServerInterface_Expecter) DeleteNic(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteNic_Call {
	return &MockServerInterface_DeleteNic_Call{Call: _e.mock.On("DeleteNic", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteNic_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteNicParams)) *MockServerInterface_DeleteNic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteNicParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteNic_Call) Return() *MockServerInterface_DeleteNic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteNic_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteNicParams)) *MockServerInterface_DeleteNic_Call {
	_c.Run(run)
	return _c
}

// DeletePublicIp provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeletePublicIp(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeletePublicIpParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeletePublicIp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeletePublicIp'
type MockServerInterface_DeletePublicIp_Call struct {
	*mock.Call
}

// DeletePublicIp is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeletePublicIpParams
func (_e *MockServerInterface_Expecter) DeletePublicIp(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeletePublicIp_Call {
	return &MockServerInterface_DeletePublicIp_Call{Call: _e.mock.On("DeletePublicIp", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeletePublicIp_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeletePublicIpParams)) *MockServerInterface_DeletePublicIp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeletePublicIpParams))
	})
	return _c
}

func (_c *MockServerInterface_DeletePublicIp_Call) Return() *MockServerInterface_DeletePublicIp_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeletePublicIp_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeletePublicIpParams)) *MockServerInterface_DeletePublicIp_Call {
	_c.Run(run)
	return _c
}

// DeleteRouteTable provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteRouteTable(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteRouteTableParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteRouteTable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteRouteTable'
type MockServerInterface_DeleteRouteTable_Call struct {
	*mock.Call
}

// DeleteRouteTable is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteRouteTableParams
func (_e *MockServerInterface_Expecter) DeleteRouteTable(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteRouteTable_Call {
	return &MockServerInterface_DeleteRouteTable_Call{Call: _e.mock.On("DeleteRouteTable", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteRouteTable_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteRouteTableParams)) *MockServerInterface_DeleteRouteTable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteRouteTableParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteRouteTable_Call) Return() *MockServerInterface_DeleteRouteTable_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteRouteTable_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteRouteTableParams)) *MockServerInterface_DeleteRouteTable_Call {
	_c.Run(run)
	return _c
}

// DeleteSecurityGroup provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteSecurityGroup(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteSecurityGroupParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteSecurityGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteSecurityGroup'
type MockServerInterface_DeleteSecurityGroup_Call struct {
	*mock.Call
}

// DeleteSecurityGroup is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteSecurityGroupParams
func (_e *MockServerInterface_Expecter) DeleteSecurityGroup(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteSecurityGroup_Call {
	return &MockServerInterface_DeleteSecurityGroup_Call{Call: _e.mock.On("DeleteSecurityGroup", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteSecurityGroup_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteSecurityGroupParams)) *MockServerInterface_DeleteSecurityGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteSecurityGroupParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteSecurityGroup_Call) Return() *MockServerInterface_DeleteSecurityGroup_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteSecurityGroup_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteSecurityGroupParams)) *MockServerInterface_DeleteSecurityGroup_Call {
	_c.Run(run)
	return _c
}

// DeleteSubnet provides a mock function with given fields: w, r, tenant, workspace, name, params
func (_m *MockServerInterface) DeleteSubnet(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteSubnetParams) {
	_m.Called(w, r, tenant, workspace, name, params)
}

// MockServerInterface_DeleteSubnet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteSubnet'
type MockServerInterface_DeleteSubnet_Call struct {
	*mock.Call
}

// DeleteSubnet is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
//   - params network.DeleteSubnetParams
func (_e *MockServerInterface_Expecter) DeleteSubnet(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}, params interface{}) *MockServerInterface_DeleteSubnet_Call {
	return &MockServerInterface_DeleteSubnet_Call{Call: _e.mock.On("DeleteSubnet", w, r, tenant, workspace, name, params)}
}

func (_c *MockServerInterface_DeleteSubnet_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName, params network.DeleteSubnetParams)) *MockServerInterface_DeleteSubnet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName), args[5].(network.DeleteSubnetParams))
	})
	return _c
}

func (_c *MockServerInterface_DeleteSubnet_Call) Return() *MockServerInterface_DeleteSubnet_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteSubnet_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName, network.DeleteSubnetParams)) *MockServerInterface_DeleteSubnet_Call {
	_c.Run(run)
	return _c
}

// GetInternetGateway provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetInternetGateway(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetInternetGateway_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetInternetGateway'
type MockServerInterface_GetInternetGateway_Call struct {
	*mock.Call
}

// GetInternetGateway is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetInternetGateway(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetInternetGateway_Call {
	return &MockServerInterface_GetInternetGateway_Call{Call: _e.mock.On("GetInternetGateway", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetInternetGateway_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetInternetGateway_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetInternetGateway_Call) Return() *MockServerInterface_GetInternetGateway_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetInternetGateway_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetInternetGateway_Call {
	_c.Run(run)
	return _c
}

// GetNetwork provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetNetwork(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetNetwork_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNetwork'
type MockServerInterface_GetNetwork_Call struct {
	*mock.Call
}

// GetNetwork is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetNetwork(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetNetwork_Call {
	return &MockServerInterface_GetNetwork_Call{Call: _e.mock.On("GetNetwork", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetNetwork_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetNetwork_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetNetwork_Call) Return() *MockServerInterface_GetNetwork_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetNetwork_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetNetwork_Call {
	_c.Run(run)
	return _c
}

// GetNic provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetNic(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetNic_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNic'
type MockServerInterface_GetNic_Call struct {
	*mock.Call
}

// GetNic is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetNic(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetNic_Call {
	return &MockServerInterface_GetNic_Call{Call: _e.mock.On("GetNic", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetNic_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetNic_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetNic_Call) Return() *MockServerInterface_GetNic_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetNic_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetNic_Call {
	_c.Run(run)
	return _c
}

// GetPublicIp provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetPublicIp(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetPublicIp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPublicIp'
type MockServerInterface_GetPublicIp_Call struct {
	*mock.Call
}

// GetPublicIp is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetPublicIp(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetPublicIp_Call {
	return &MockServerInterface_GetPublicIp_Call{Call: _e.mock.On("GetPublicIp", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetPublicIp_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetPublicIp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetPublicIp_Call) Return() *MockServerInterface_GetPublicIp_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetPublicIp_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetPublicIp_Call {
	_c.Run(run)
	return _c
}

// GetRouteTable provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetRouteTable(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetRouteTable_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRouteTable'
type MockServerInterface_GetRouteTable_Call struct {
	*mock.Call
}

// GetRouteTable is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetRouteTable(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetRouteTable_Call {
	return &MockServerInterface_GetRouteTable_Call{Call: _e.mock.On("GetRouteTable", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetRouteTable_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetRouteTable_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetRouteTable_Call) Return() *MockServerInterface_GetRouteTable_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetRouteTable_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetRouteTable_Call {
	_c.Run(run)
	return _c
}

// GetSecurityGroup provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetSecurityGroup(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetSecurityGroup_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSecurityGroup'
type MockServerInterface_GetSecurityGroup_Call struct {
	*mock.Call
}

// GetSecurityGroup is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetSecurityGroup(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetSecurityGroup_Call {
	return &MockServerInterface_GetSecurityGroup_Call{Call: _e.mock.On("GetSecurityGroup", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetSecurityGroup_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetSecurityGroup_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetSecurityGroup_Call) Return() *MockServerInterface_GetSecurityGroup_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetSecurityGroup_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetSecurityGroup_Call {
	_c.Run(run)
	return _c
}

// GetSku provides a mock function with given fields: w, r, tenant, name
func (_m *MockServerInterface) GetSku(w http.ResponseWriter, r *http.Request, tenant network.Tenant, name network.ResourceName) {
	_m.Called(w, r, tenant, name)
}

// MockServerInterface_GetSku_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSku'
type MockServerInterface_GetSku_Call struct {
	*mock.Call
}

// GetSku is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetSku(w interface{}, r interface{}, tenant interface{}, name interface{}) *MockServerInterface_GetSku_Call {
	return &MockServerInterface_GetSku_Call{Call: _e.mock.On("GetSku", w, r, tenant, name)}
}

func (_c *MockServerInterface_GetSku_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, name network.ResourceName)) *MockServerInterface_GetSku_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetSku_Call) Return() *MockServerInterface_GetSku_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetSku_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.ResourceName)) *MockServerInterface_GetSku_Call {
	_c.Run(run)
	return _c
}

// GetSubnet provides a mock function with given fields: w, r, tenant, workspace, name
func (_m *MockServerInterface) GetSubnet(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName) {
	_m.Called(w, r, tenant, workspace, name)
}

// MockServerInterface_GetSubnet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSubnet'
type MockServerInterface_GetSubnet_Call struct {
	*mock.Call
}

// GetSubnet is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - name network.ResourceName
func (_e *MockServerInterface_Expecter) GetSubnet(w interface{}, r interface{}, tenant interface{}, workspace interface{}, name interface{}) *MockServerInterface_GetSubnet_Call {
	return &MockServerInterface_GetSubnet_Call{Call: _e.mock.On("GetSubnet", w, r, tenant, workspace, name)}
}

func (_c *MockServerInterface_GetSubnet_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, name network.ResourceName)) *MockServerInterface_GetSubnet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ResourceName))
	})
	return _c
}

func (_c *MockServerInterface_GetSubnet_Call) Return() *MockServerInterface_GetSubnet_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetSubnet_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ResourceName)) *MockServerInterface_GetSubnet_Call {
	_c.Run(run)
	return _c
}

// ListInternetGateways provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListInternetGateways(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListInternetGatewaysParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListInternetGateways_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListInternetGateways'
type MockServerInterface_ListInternetGateways_Call struct {
	*mock.Call
}

// ListInternetGateways is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListInternetGatewaysParams
func (_e *MockServerInterface_Expecter) ListInternetGateways(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListInternetGateways_Call {
	return &MockServerInterface_ListInternetGateways_Call{Call: _e.mock.On("ListInternetGateways", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListInternetGateways_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListInternetGatewaysParams)) *MockServerInterface_ListInternetGateways_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListInternetGatewaysParams))
	})
	return _c
}

func (_c *MockServerInterface_ListInternetGateways_Call) Return() *MockServerInterface_ListInternetGateways_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListInternetGateways_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListInternetGatewaysParams)) *MockServerInterface_ListInternetGateways_Call {
	_c.Run(run)
	return _c
}

// ListNetworks provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListNetworks(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListNetworksParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListNetworks_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListNetworks'
type MockServerInterface_ListNetworks_Call struct {
	*mock.Call
}

// ListNetworks is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListNetworksParams
func (_e *MockServerInterface_Expecter) ListNetworks(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListNetworks_Call {
	return &MockServerInterface_ListNetworks_Call{Call: _e.mock.On("ListNetworks", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListNetworks_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListNetworksParams)) *MockServerInterface_ListNetworks_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListNetworksParams))
	})
	return _c
}

func (_c *MockServerInterface_ListNetworks_Call) Return() *MockServerInterface_ListNetworks_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListNetworks_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListNetworksParams)) *MockServerInterface_ListNetworks_Call {
	_c.Run(run)
	return _c
}

// ListNics provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListNics(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListNicsParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListNics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListNics'
type MockServerInterface_ListNics_Call struct {
	*mock.Call
}

// ListNics is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListNicsParams
func (_e *MockServerInterface_Expecter) ListNics(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListNics_Call {
	return &MockServerInterface_ListNics_Call{Call: _e.mock.On("ListNics", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListNics_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListNicsParams)) *MockServerInterface_ListNics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListNicsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListNics_Call) Return() *MockServerInterface_ListNics_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListNics_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListNicsParams)) *MockServerInterface_ListNics_Call {
	_c.Run(run)
	return _c
}

// ListPublicIps provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListPublicIps(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListPublicIpsParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListPublicIps_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListPublicIps'
type MockServerInterface_ListPublicIps_Call struct {
	*mock.Call
}

// ListPublicIps is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListPublicIpsParams
func (_e *MockServerInterface_Expecter) ListPublicIps(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListPublicIps_Call {
	return &MockServerInterface_ListPublicIps_Call{Call: _e.mock.On("ListPublicIps", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListPublicIps_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListPublicIpsParams)) *MockServerInterface_ListPublicIps_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListPublicIpsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListPublicIps_Call) Return() *MockServerInterface_ListPublicIps_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListPublicIps_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListPublicIpsParams)) *MockServerInterface_ListPublicIps_Call {
	_c.Run(run)
	return _c
}

// ListRouteTables provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListRouteTables(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListRouteTablesParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListRouteTables_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListRouteTables'
type MockServerInterface_ListRouteTables_Call struct {
	*mock.Call
}

// ListRouteTables is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListRouteTablesParams
func (_e *MockServerInterface_Expecter) ListRouteTables(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListRouteTables_Call {
	return &MockServerInterface_ListRouteTables_Call{Call: _e.mock.On("ListRouteTables", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListRouteTables_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListRouteTablesParams)) *MockServerInterface_ListRouteTables_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListRouteTablesParams))
	})
	return _c
}

func (_c *MockServerInterface_ListRouteTables_Call) Return() *MockServerInterface_ListRouteTables_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListRouteTables_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListRouteTablesParams)) *MockServerInterface_ListRouteTables_Call {
	_c.Run(run)
	return _c
}

// ListSecurityGroups provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListSecurityGroups(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListSecurityGroupsParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListSecurityGroups_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListSecurityGroups'
type MockServerInterface_ListSecurityGroups_Call struct {
	*mock.Call
}

// ListSecurityGroups is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListSecurityGroupsParams
func (_e *MockServerInterface_Expecter) ListSecurityGroups(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListSecurityGroups_Call {
	return &MockServerInterface_ListSecurityGroups_Call{Call: _e.mock.On("ListSecurityGroups", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListSecurityGroups_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListSecurityGroupsParams)) *MockServerInterface_ListSecurityGroups_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListSecurityGroupsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListSecurityGroups_Call) Return() *MockServerInterface_ListSecurityGroups_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListSecurityGroups_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListSecurityGroupsParams)) *MockServerInterface_ListSecurityGroups_Call {
	_c.Run(run)
	return _c
}

// ListSkus provides a mock function with given fields: w, r, tenant, params
func (_m *MockServerInterface) ListSkus(w http.ResponseWriter, r *http.Request, tenant network.Tenant, params network.ListSkusParams) {
	_m.Called(w, r, tenant, params)
}

// MockServerInterface_ListSkus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListSkus'
type MockServerInterface_ListSkus_Call struct {
	*mock.Call
}

// ListSkus is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - params network.ListSkusParams
func (_e *MockServerInterface_Expecter) ListSkus(w interface{}, r interface{}, tenant interface{}, params interface{}) *MockServerInterface_ListSkus_Call {
	return &MockServerInterface_ListSkus_Call{Call: _e.mock.On("ListSkus", w, r, tenant, params)}
}

func (_c *MockServerInterface_ListSkus_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, params network.ListSkusParams)) *MockServerInterface_ListSkus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.ListSkusParams))
	})
	return _c
}

func (_c *MockServerInterface_ListSkus_Call) Return() *MockServerInterface_ListSkus_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListSkus_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.ListSkusParams)) *MockServerInterface_ListSkus_Call {
	_c.Run(run)
	return _c
}

// ListSubnets provides a mock function with given fields: w, r, tenant, workspace, params
func (_m *MockServerInterface) ListSubnets(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListSubnetsParams) {
	_m.Called(w, r, tenant, workspace, params)
}

// MockServerInterface_ListSubnets_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListSubnets'
type MockServerInterface_ListSubnets_Call struct {
	*mock.Call
}

// ListSubnets is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - tenant network.Tenant
//   - workspace network.Workspace
//   - params network.ListSubnetsParams
func (_e *MockServerInterface_Expecter) ListSubnets(w interface{}, r interface{}, tenant interface{}, workspace interface{}, params interface{}) *MockServerInterface_ListSubnets_Call {
	return &MockServerInterface_ListSubnets_Call{Call: _e.mock.On("ListSubnets", w, r, tenant, workspace, params)}
}

func (_c *MockServerInterface_ListSubnets_Call) Run(run func(w http.ResponseWriter, r *http.Request, tenant network.Tenant, workspace network.Workspace, params network.ListSubnetsParams)) *MockServerInterface_ListSubnets_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(network.Tenant), args[3].(network.Workspace), args[4].(network.ListSubnetsParams))
	})
	return _c
}

func (_c *MockServerInterface_ListSubnets_Call) Return() *MockServerInterface_ListSubnets_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_ListSubnets_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, network.Tenant, network.Workspace, network.ListSubnetsParams)) *MockServerInterface_ListSubnets_Call {
	_c.Run(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
