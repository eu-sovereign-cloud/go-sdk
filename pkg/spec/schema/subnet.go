// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package schema

// Subnet defines model for Subnet.
type Subnet struct {
	// Annotations User-defined key/value pairs that are mutable and can be used to add annotations.
	// The number of annotations is eventually limited by the CSP.
	Annotations Annotations `json:"annotations,omitempty"`

	// Extensions User-defined key/value pairs that are mutable and can be used to add extensions.
	// Extensions are subject to validation by the CSP, and any value that is not accepted will be rejected during admission.
	Extensions Extensions `json:"extensions,omitempty"`

	// Labels User-defined key/value pairs that are mutable and can be used to
	// organize and categorize resources. They can be used to filter resources.
	// The number of labels is eventually limited by the CSP.
	Labels Labels `json:"labels,omitempty"`

	// Metadata Metadata for regional resources with name, permission, modification, type, tenant, workspace, network and region information.
	Metadata *RegionalNetworkResourceMetadata `json:"metadata,omitempty"`

	// Spec Detailed specification of the subnet. Automatic address
	// assignment is supported, similar to the network configuration. The
	// subnet's prefix length must be smaller than the network's prefix
	// length, ensuring proper subdivision of the address space.
	// The first and last IP addresses in the subnet are reserved
	// the network address and broadcast address, respectively.
	//
	// Most CSP will not allow to use a different IPv6 prefix length than /64.
	Spec SubnetSpec `json:"spec"`

	// Status The status of the subnet, including the current state and any
	// associated IP addresses. The status is read-only and provides
	// information about the subnet's configuration and health.
	Status *SubnetStatus `json:"status,omitempty"`
}

// SubnetSpec Detailed specification of the subnet. Automatic address
// assignment is supported, similar to the network configuration. The
// subnet's prefix length must be smaller than the network's prefix
// length, ensuring proper subdivision of the address space.
// The first and last IP addresses in the subnet are reserved
// the network address and broadcast address, respectively.
//
// Most CSP will not allow to use a different IPv6 prefix length than /64.
type SubnetSpec struct {
	// Cidr Combined IPv4 and IPv6 CIDR block for a subnet. Depending on the network
	// configuration, either the IPv4 or IPv6 range can be omitted. So the following
	// combinations are possible:
	//
	// * IPv4 only
	// * IPv6 only
	// * IPv4 and IPv6 (Dual Stack)
	Cidr Cidr `json:"cidr"`

	// RouteTableRef Reference to the route table used by default for all NICs in this Subnet.
	// If not provided, the routeTableRef associated with the network of the subnet will be used.
	RouteTableRef *Reference `json:"routeTableRef,omitempty"`

	// SkuRef Reference to the SKU used by default for all NICs in this Network.
	// Can be overridden by the NIC
	SkuRef *Reference `json:"skuRef,omitempty"`

	// Zone Reference to a specific zone within a region
	Zone Zone `json:"zone"`
}

// SubnetStatus defines model for SubnetStatus.
type SubnetStatus struct {
	// Cidr Combined IPv4 and IPv6 CIDR block for a subnet. Depending on the network
	// configuration, either the IPv4 or IPv6 range can be omitted. So the following
	// combinations are possible:
	//
	// * IPv4 only
	// * IPv6 only
	// * IPv4 and IPv6 (Dual Stack)
	Cidr       *Cidr             `json:"cidr,omitempty"`
	Conditions []StatusCondition `json:"conditions"`

	// RouteTableRef The route table used by this subnet.
	RouteTableRef *Reference `json:"routeTableRef,omitempty"`

	// State Current phase of the resource:
	// - pending: not available, waiting for other resources
	// - creating: not available, creation started
	// - active: available for data layer usage
	// - updating: available for data layer usage
	// - deleting: maybe still available for data layer user, can fail any moment
	// - suspended: not available, provider specific behavior (payment issue, user decided to suspend)
	// - error: failed to fulfill the request; would be related to provider issue or customer related input.
	State *ResourceState `json:"state,omitempty"`
}
