// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package schema

// Defines values for InstanceStatusPowerState.
const (
	InstanceStatusPowerStateOff InstanceStatusPowerState = "off"
	InstanceStatusPowerStateOn  InstanceStatusPowerState = "on"
)

// Instance defines model for Instance.
type Instance struct {
	Annotations *interface{} `json:"annotations,omitempty"`

	// Extensions User-defined key/value pairs that are mutable and can be used to add extensions.
	// Extensions are subject to validation by the CSP, and any value that is not accepted will be rejected during admission.
	Extensions Extensions `json:"extensions,omitempty"`

	// Labels User-defined key/value pairs that are mutable and can be used to
	// organize and categorize resources. They can be used to filter resources.
	// The number of labels is eventually limited by the CSP.
	Labels Labels `json:"labels,omitempty"`

	// Metadata Metadata for regional resources with name, permission, modification, type, tenant and workspace and region information.
	Metadata *RegionalWorkspaceResourceMetadata `json:"metadata,omitempty"`

	// Spec Specification of the instance, including its SKU, network configuration, and storage options.
	Spec InstanceSpec `json:"spec"`

	// Status Current status of the instance.
	Status *InstanceStatus `json:"status,omitempty"`
}

// InstanceSpec Specification of the instance, including its SKU, network configuration, and storage options.
type InstanceSpec struct {
	// AdditionalNicRefs Additional NICs attached to this instance
	AdditionalNicRefs *[]Reference `json:"additionalNicRefs,omitempty"`

	// AntiAffinityGroup Anti-affinity group to which this instance belongs.
	// Instances in the same anti-affinity group are placed on different physical hosts.
	// The number of maximum instances in an anti-affinity group is provider-specific.
	AntiAffinityGroup *string `json:"antiAffinityGroup,omitempty"`

	// BootVolume Reference to the block storage used to store the boot volume of the instance.
	BootVolume  VolumeReference    `json:"bootVolume"`
	DataVolumes *[]VolumeReference `json:"dataVolumes,omitempty"`

	// PrimaryNicRef Reference to the primary NIC attached to this instance.
	PrimaryNicRef *Reference `json:"primaryNicRef,omitempty"`

	// SecurityGroupRef Reference to the security group associated with this instance.
	SecurityGroupRef *Reference `json:"securityGroupRef,omitempty"`

	// SkuRef Reference to the SKU of the instance.
	SkuRef Reference `json:"skuRef"`

	// SshKeys Provider-specific references to SSH keys used in cloud-init vendorData.
	// These references are used to inject SSH public keys during instance initialization
	// through cloud-init's vendor data configuration.
	SshKeys *[]string `json:"sshKeys,omitempty"`

	// UserData Cloud-init user data for instance initialization
	// Example cloud-init user configuration with SSH key:
	UserData *string `json:"userData,omitempty"`

	// Zone Reference to a specific zone within a region
	Zone Zone `json:"zone"`
}

// InstanceStatus defines model for InstanceStatus.
type InstanceStatus struct {
	Conditions []StatusCondition `json:"conditions"`

	// PowerState Current power state of the instance.
	PowerState InstanceStatusPowerState `json:"powerState"`

	// State Current phase of the resource:
	// - pending: not available, waiting for other resources
	// - creating: not available, creation started
	// - active: available for data layer usage
	// - updating: available for data layer usage
	// - deleting: maybe still available for data layer user, can fail any moment
	// - suspended: not available, provider specific behavior (payment issue, user decided to suspend)
	// - error: failed to fulfill the request; would be related to provider issue or customer related input.
	State *ResourceState `json:"state,omitempty"`
}

// InstanceStatusPowerState Current power state of the instance.
type InstanceStatusPowerState string
