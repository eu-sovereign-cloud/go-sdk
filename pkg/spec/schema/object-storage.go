// Package schema provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package schema

// ObjectStorageAccount defines model for ObjectStorageAccount.
type ObjectStorageAccount struct {
	Annotations *interface{} `json:"annotations,omitempty"`

	// Extensions User-defined key/value pairs that are mutable and can be used to add extensions.
	// Extensions are subject to validation by the CSP, and any value that is not accepted will be rejected during admission.
	Extensions Extensions `json:"extensions,omitempty"`

	// Labels User-defined key/value pairs that are mutable and can be used to
	// organize and categorize resources. They can be used to filter resources.
	// The number of labels is eventually limited by the CSP.
	Labels Labels `json:"labels,omitempty"`

	// Metadata Metadata for global resources with name, permission, modification, type, and tenant information.
	Metadata *GlobalResourceMetadata `json:"metadata,omitempty"`

	// Spec The specification of an object storage account, including the region and zone.
	Spec ObjectStorageAccountSpec `json:"spec"`

	// Status The status of an object storage account, including the access key, secret key, and canonical user ID.
	Status *ObjectStorageAccountStatus `json:"status,omitempty"`
}

// ObjectStorageAccountSpec The specification of an object storage account, including the region and zone.
type ObjectStorageAccountSpec = map[string]interface{}

// ObjectStorageAccountStatus defines model for ObjectStorageAccountStatus.
type ObjectStorageAccountStatus struct {
	// AccessKey Access key for the object storage account
	AccessKey *string `json:"accessKey,omitempty"`

	// CanonicalUserId Canonical user ID for the object storage account
	CanonicalUserId *string           `json:"canonicalUserId,omitempty"`
	Conditions      []StatusCondition `json:"conditions"`

	// SecretKey Secret key for the object storage account
	SecretKey *string `json:"secretKey,omitempty"`

	// State Current phase of the resource:
	// - pending: not available, waiting for other resources
	// - creating: not available, creation started
	// - active: available for data layer usage
	// - updating: available for data layer usage
	// - deleting: maybe still available for data layer user, can fail any moment
	// - suspended: not available, provider specific behavior (payment issue, user decided to suspend)
	// - error: failed to fulfill the request; would be related to provider issue or customer related input.
	State *ResourceState `json:"state,omitempty"`
}
